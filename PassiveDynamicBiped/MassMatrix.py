#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Sat May  6 16:39:04 2017

@author: Shruti
"""

import numpy as np
from numpy import linalg as la
import pylab as plt


def  MassMatrix(gamma,alpha,l_0,l2x,l2y,rFoot,gx,gy,m1,m2,j2):
#MASSMATRIX
#    M = MASSMATRIX(GAMMA,ALPHA,L_0,L2X,L2Y,RFOOT,GX,GY,M1,M2,J2)

#    This function was generated by the Symbolic Math Toolbox version 5.4.

    t731 = np.cos(gamma)
    t732 = alpha + gamma
    t733 = np.dot(l_0,l_0)
    t734 = np.cos(alpha)
    t735 = np.sin(alpha)
    t736 = np.sin(t732)
    t737 = np.cos(t732)
    t738 = np.dot(l2x,l2x)
    t739 = np.dot(l2y,l2y)
    t740 = np.dot(l2y, np.dot(m2,t736))
    t741 = np.dot(l2x, np.dot(m2,t734))
    t742 = t740 + t741 - (np.dot(l2x, np.dot(m2,t737))) - (np.dot(l2y, np.dot(m2,t735)))
    t743 = np.dot(rFoot,t742)
    t744 = np.dot(m2,t738)
    t745 = np.dot(m2,t739)
    t746 = np.dot(l2y, np.dot(l_0, np.dot(m2,t735)))
    t747 = j2 + t743 + t744 + t745 + t746 - (np.dot(l2x, np.dot(l_0, np.dot(m2,t734))))
    ex1 = np.dot(-l2x, np.dot(l_0, m2*2.0)) - np.dot(l2x, np.dot(l_0, np.dot(m2, t734*2.0)))+ np.dot(l2y, np.dot(l_0, np.dot(m2,t735*2.0)))
    ex2 = m1*2.0 + m2*4.0 - np.dot(m1, t731*2.0) - np.dot(m2, t731*4.0)
    ex3 = np.dot(l2x, (m2*2.0)) - np.dot(l_0, m1*2.0) - np.dot(l_0, m2*4.0) + np.dot(l2y, m2 * np.sin(gamma)*2.0) - np.dot(l2x, np.dot(m2, t731*2.0)) + np.dot(l2x, np.dot(m2, t734*2.0)) - np.dot(l2x, np.dot(m2,t737*2.0)) - np.dot(l2y, np.dot(m2, t735*2.0)) + np.dot(l2y, np.dot(m2, t736*2.0)) + np.dot(l_0,np.dot(m1, t731*2.0)) + np.dot(l_0, np.dot(m2, t731*4.0))
    ex4 = (j2 * 2.0) + np.dot(m1,t733) + np.dot(m2, t733*2.0) + np.dot(m2, t738*2.0) + np.dot(m2, t739*2.0)
    
    
    M = np.asarray([[ex4 + np.dot(rFoot, (ex3)) +(np.dot(np.dot(rFoot, rFoot),(ex2)))+ ex1, t747, t747, j2+t744+t745]])
    M = np.reshape(M,(2,2))
    return M
