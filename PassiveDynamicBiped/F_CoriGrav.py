#!/usr/bin/env python2
# -*- coding: utf-8 -*-
"""
Created on Sat May  6 17:45:28 2017

@author: Shruti
"""
import numpy as np
from numpy import linalg as la
import pylab as plt

def F_CoriGrav(gamma,alpha,dgamma,dalpha,l_0,l2x,l2y,rFoot,gx,gy,m1,m2,j2):
#F_CORIGRAV
#    F_CG = F_CORIGRAV(GAMMA,ALPHA,DGAMMA,DALPHA,L_0,L2X,L2Y,RFOOT,GX,GY,M1,M2,J2)

#    This function was generated by the Symbolic Math Toolbox version 5.4.


    t749 = alpha+gamma
    t750 = np.cos(t749)
    t751 = np.sin(t749)
    t752 = np.dot(dgamma, dgamma)
    t753 = np.dot(rFoot, rFoot)
    t754 = np.sin(gamma)
    t755 = np.cos(gamma)
    t756 = np.dot(dalpha,dalpha)
    t757 = np.cos(alpha)
    t758 = np.sin(alpha)
    ex1 = np.dot(gx, np.dot(l2x,t750)) - np.dot(gx, np.dot(l2y, t751)) + np.dot(gy, np.dot(l2x, t751)) + np.dot(gy, np.dot(l2y, t750)) + np.dot(l2x, np.dot(l_0, np.dot(t752, t758))) + np.dot(l2y, np.dot(l_0, np.dot(t752, t757))) - np.dot(l2x, np.dot(rFoot, np.dot(t752, t758))) - np.dot(l2y, np.dot(rFoot, np.dot(t752,t757)))
    f_cg = np.asarray([[np.dot(-gx, np.dot(m1, rFoot)) - np.dot(gx, np.dot(m2,np.float64(rFoot*2.0))) + np.dot(gx, np.dot(l2x, np.dot(m2, t750))) + np.dot(gx, np.dot(l2x, np.dot(m2, t755))) - np.dot(gx, np.dot(l2y, np.dot(m2, t751))) - np.dot(gx, np.dot(l2y, np.dot(m2,t754))) + np.dot(gy, np.dot(l2x, np.dot(m2, t751))) + np.dot(gy, np.dot(l2x, np.dot(m2,t754))) + np.dot(gy, np.dot(l2y, np.dot(m2,t750))) + np.dot(gy, np.dot(l2y, np.dot(m2, t755))) - np.dot(gx, np.dot(l_0, np.dot(m1, t755))) - np.dot(gy, np.dot(l_0,np.dot(m1,t754))) - np.dot(gx, np.dot(l_0, np.dot(m2, t755*2.0))) - np.dot(gy, np.dot(l_0, np.dot(m2, np.float64(t754*2.0)))) + np.dot(gx, np.dot(m1, np.dot(rFoot, t755))) + np.dot(gy,np.dot(m1, np.dot(rFoot, t754))) + np.dot(gx, np.dot(m2, np.dot(rFoot,np.float64(t755*2.0)))) + np.dot(gy,np.dot(m2, np.dot(rFoot, np.float64(t754*2.0)))) - np.dot(m1, np.dot(t752, np.dot(t753,t754))) - np.dot(m2, np.dot(t752, np.dot(t753, np.float64(t754*2.0)))) - np.dot(l2x, np.dot(l_0, np.dot(m2, np.dot(t756, t758)))) - np.dot(l2y, np.dot(l_0, np.dot(m2, np.dot(t756, t757)))) - np.dot(l2x, np.dot(m2, np.dot(rFoot, np.dot(t751,t752)))) - np.dot(l2x, np.dot(m2, np.dot(rFoot, np.dot(t752, t754)))) - np.dot(l2x, np.dot(m2, np.dot(rFoot, np.dot(t751, t756)))) + np.dot(l2x, np.dot(m2, np.dot(rFoot, np.dot(t756, t758)))) - np.dot(l2y, np.dot(m2, np.dot(rFoot, np.dot(t750, t752)))) - np.dot(l2y, np.dot(m2, np.dot(rFoot, np.dot(t750, t756)))) - np.dot(l2y, np.dot(m2, np.dot(rFoot, np.dot(t752,t755)))) + np.dot(l2y, np.dot(m2, np.dot(rFoot, np.dot(t756, t757)))) + np.dot(l_0, np.dot(m1, np.dot(rFoot, np.dot(t752, t754)))) + np.dot(l_0, np.dot(m2, np.dot(rFoot, np.dot(t752, np.float64(t754*2.0))))) - np.dot(dalpha, np.dot(dgamma, np.dot(l2x, np.dot(l_0, np.dot(m2, np.float64(t758*2.0)))))) - np.dot(dalpha, np.dot(dgamma, np.dot(l2y, np.dot(l_0, np.dot(m2, np.float64(t757*2.0)))))) - np.dot(dalpha, np.dot(dgamma, np.dot(l2x, np.dot(m2, np.dot(rFoot, np.float64(t751*2.0)))))) + np.dot(dalpha, np.dot(dgamma, np.dot(l2x, np.dot(m2, np.dot(rFoot, np.float64(t758*2.0)))))) - np.dot(dalpha, np.dot(dgamma, np.dot(l2y, np.dot(m2, np.dot(rFoot, np.float64(t750*2.0)))))) + np.dot(dalpha, np.dot(dgamma, np.dot(l2y,np.dot(m2, np.dot(rFoot,np.float64(t757*2.0))))))],[m2*(ex1)]])
    return f_cg